MACRO #gg_extract_report_settings
BEGIN
STATOPTIONS RESETREPORTSTATS
REPORT AT 00:01
REPORTROLLOVER AT 00:05
REPORTCOUNT EVERY 1 MINUTES, RATE
DISCARDROLLOVER at 02:00 ON SUNDAY
WARNLONGTRANS 20M, CHECKINTERVAL 10M
END;

MACRO #gg_dpump_report_settings
BEGIN
STATOPTIONS RESETREPORTSTATS
REPORT AT 00:01
REPORTROLLOVER AT 00:05
REPORTCOUNT EVERY 1 MINUTES, RATE
DISCARDROLLOVER at 02:00 ON SUNDAY
END;

MACRO #gg_replicat_report_settings
BEGIN
STATOPTIONS RESETREPORTSTATS
REPORT AT 00:01
REPORTROLLOVER AT 00:05
REPORTCOUNT EVERY 1 MINUTES, RATE
DISCARDROLLOVER at 02:00 ON SUNDAY
END;


MACRO #gg_extract_settings
BEGIN
LOGALLSUPCOLS
UPDATERECORDFORMAT COMPACT
TRANLOGOPTIONS EXCLUDEUSER OGGADM1
TRANLOGOPTIONS INCLUDEREGIONID
DDL INCLUDE MAPPED
DDLOPTIONS REPORT
GETUPDATEBEFORES
GETTRUNCATES
NOCOMPRESSUPDATES
NOCOMPRESSDELETES
END;

MACRO #gg_extract_target_settings
BEGIN
LOGALLSUPCOLS
UPDATERECORDFORMAT COMPACT
TRANLOGOPTIONS EXCLUDEUSER OGGADM1
TRANLOGOPTIONS INCLUDEREGIONID
DDL INCLUDE MAPPED
DDLOPTIONS REPORT
GETUPDATEBEFORES
NOCOMPRESSUPDATES
NOCOMPRESSDELETES
END;


MACRO #gg_replicat_settings
BEGIN
ASSUMETARGETDEFS
--DDLERROR DEFAULT IGNORE
DDLERROR DEFAULT IGNORE RETRYOP
--ddlerror 1432 ignore
DBOPTIONS SUPPRESSTRIGGERS DEFERREFCONST
--GROUPTRANSOPS 1000
END;


MACRO #r_reperror
BEGIN
REPERROR (DEFAULT, EXCEPTION)
REPERROR (DEFAULT2, ABEND)
END;


MACRO #mapschemas
PARAMS ( #source, #target )
BEGIN
MAP #source.*, TARGET #target.* ;
END;

MACRO #fetchfromschemas
PARAMS ( #source )
BEGIN
Table #source.* ,GETBEFORECOLS (ON UPDATE ALL, ON DELETE ALL);
END;

MACRO #dpumpfromschemas
PARAMS ( #source )
BEGIN
Table #source.* ;
END;



MACRO #exception_handler
PARAMS (#source, #target)
BEGIN
MAP #source.* , TARGET #target.*,  &
MAPEXCEPTION (TARGET oggadm1.EXCEPTIONS, &
EXCEPTIONSONLY, INSERTALLRECORDS, COLMAP  &
( &
 excp_date =       @DATENOW(), &
 rep_name =        @GETENV ('GGENVIRONMENT', 'GROUPNAME'), &
 table_name =      @GETENV ('GGHEADER', 'TABLENAME'), &
 errno =           @GETENV ('LASTERR', 'DBERRNUM'), &
 dberrmsg   =      @GETENV ('LASTERR', 'DBERRMSG') , &
 errtype =         @GETENV ('LASTERR', 'ERRTYPE'), &
 optype =          @GETENV ('LASTERR', 'OPTYPE'), &
 transind =        @GETENV ('GGHEADER', 'TRANSACTIONINDICATOR'), &
 transimgind     = @GETENV ('GGHEADER', 'BEFOREAFTERINDICATOR'), &
 committimestamp = @GETENV ('GGHEADER', 'COMMITTIMESTAMP'), &
 reccsn =          @GETENV ('TRANSACTION', 'CSN'), &
 recseqno =        @GETENV ('RECORD', 'FILESEQNO'), &
 recrba =          @GETENV ('RECORD', 'FILERBA'), &
 rectranspos =     @GETENV ('RECORD', 'RSN'), &
 reclength =       @GETENV ('GGHEADAER', 'RECORDLENGTH'), &
 logrba =          @GETENV ('GGHEADER', 'LOGRBA'), &
 logposition =     @GETENV ('GGHEADER', 'LOGPOSITION'), &
 grouptype =       @GETENV ('GGENVIRONMENT', 'GROUPTYPE'), &
 filename =        @GETENV ('GGFILEHEADER', 'FILENAME'), &
 fileno =          @GETENV ('GGFILEHEADER', 'FILESEQNO'), &
 srcrowid =        @GETENV ('TRANSACTION', 'CSN'), &
 srcdbcharset =    @GETENV ('GGFILEHEADER', 'DBCHARSET'), &
 replag =          @GETENV ('LAG', 'SEC'), &
 cnt_cdr_conflicts =   @GETENV ('DELTASTATS','TABLE', @GETENV ('GGHEADER', 'TABLENAME'),'CDR_CONFLICTS') , &
 cnt_cdr_resolutions = @GETENV ('DELTASTATS','TABLE', @GETENV ('GGHEADER', 'TABLENAME'),'CDR_RESOLUTIONS_SUCCEEDED') , &
 cnt_cdr_failed =      @GETENV ('DELTASTATS','TABLE', @GETENV ('GGHEADER', 'TABLENAME'),'CDR_RESOLUTIONS_FAILED')));
 END;


MACRO #global_exception_table
BEGIN
    TARGET oggadm1.EXCEPTIONS
END;
