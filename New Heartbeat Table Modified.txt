-- This is created on the SOURCE system


--SOURCE

drop table c022427.heartbeat;
-- Create table statement

CREATE TABLE c022427.HEARTBEAT
( ID NUMBER ,
SRC_DB VARCHAR2(30),
EXTRACT_NAME varchar2(8),
SOURCE_COMMIT TIMESTAMP,
TARGET_COMMIT TIMESTAMP,
CAPTIME TIMESTAMP,
CAPLAG NUMBER,
PMPTIME TIMESTAMP,
PMPGROUP VARCHAR2(8 BYTE),
PMPLAG NUMBER,
DELTIME TIMESTAMP,
DELGROUP VARCHAR2(8 BYTE),
DELLAG NUMBER,
TOTALLAG NUMBER,
thread number,
update_timestamp timestamp,
EDDLDELTASTATS number,
EDMLDELTASTATS number,
RDDLDELTASTATS number,
RDMLDELTASTATS number,
CONSTRAINT HEARTBEAT_PK PRIMARY KEY (SRC_DB) ENABLE
);


-- this assumes that the table is empty
INSERT INTO c022427.HEARTBEAT (SRC_DB) select db_unique_name from
V$database;
commit;


--TARGET


DROP SEQUENCE c022427.SEQ_GGS_HEARTBEAT_ID ;

CREATE SEQUENCE c022427.SEQ_GGS_HEARTBEAT_ID INCREMENT BY 1 START WITH 1 ORDER ;




DROP TABLE c022427.GGS_HEARTBEAT;

CREATE TABLE c022427.GGS_HEARTBEAT
( ID NUMBER ,
SRC_DB VARCHAR2(30),
EXTRACT_NAME varchar2(8),
SOURCE_COMMIT TIMESTAMP,
TARGET_COMMIT TIMESTAMP,
CAPTIME TIMESTAMP,
CAPLAG NUMBER,
PMPTIME TIMESTAMP,
PMPGROUP VARCHAR2(8 BYTE),
PMPLAG NUMBER,
DELTIME TIMESTAMP,
DELGROUP VARCHAR2(8 BYTE),
DELLAG NUMBER,
TOTALLAG NUMBER,
thread number,
update_timestamp timestamp,
EDDLDELTASTATS number,
EDMLDELTASTATS number,
RDDLDELTASTATS number,
RDMLDELTASTATS number,
CONSTRAINT GGS_HEARTBEAT_PK PRIMARY KEY (DELGROUP) ENABLE
);


CREATE OR REPLACE TRIGGER c022427.GGS_HEARTBEAT_TRIG
BEFORE INSERT OR UPDATE ON GGS_HEARTBEAT
FOR EACH ROW
BEGIN
select seq_ggs_HEARTBEAT_id.nextval
into :NEW.ID
from dual;
select systimestamp
into :NEW.target_COMMIT
from dual;
select trunc(to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT ),1,
instr(:NEW.CAPTIME - :NEW.SOURCE_COMMIT,' ')))) * 86400
+ to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT), instr((:NEW.CAPTIME -
:NEW.SOURCE_COMMIT),' ')+1,2)) * 3600
+ to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT), instr((:NEW.CAPTIME -
:NEW.SOURCE_COMMIT),' ')+4,2) ) * 60
+ to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT), instr((:NEW.CAPTIME -
:NEW.SOURCE_COMMIT),' ')+7,2))
+ to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT), instr((:NEW.CAPTIME -
:NEW.SOURCE_COMMIT),' ')+10,6)) / 1000000
into :NEW.CAPLAG
from dual;
select trunc(to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME),1,
instr(:NEW.PMPTIME - :NEW.CAPTIME,' ')))) * 86400
+ to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME), instr((:NEW.PMPTIME -
:NEW.CAPTIME),' ')+1,2)) * 3600
+ to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME), instr((:NEW.PMPTIME -
:NEW.CAPTIME),' ')+4,2) ) * 60
+ to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME), instr((:NEW.PMPTIME -
:NEW.CAPTIME),' ')+7,2))
+ to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME), instr((:NEW.PMPTIME -
:NEW.CAPTIME),' ')+10,6)) / 1000000
into :NEW.PMPLAG
from dual;
select trunc(to_number(substr((:NEW.DELTIME - :NEW.PMPTIME),1,
instr(:NEW.DELTIME - :NEW.PMPTIME,' ')))) * 86400
+ to_number(substr((:NEW.DELTIME - :NEW.PMPTIME), instr((:NEW.DELTIME -
:NEW.PMPTIME),' ')+1,2)) * 3600
+ to_number(substr((:NEW.DELTIME - :NEW.PMPTIME), instr((:NEW.DELTIME -
:NEW.PMPTIME),' ')+4,2) ) * 60
+ to_number(substr((:NEW.DELTIME - :NEW.PMPTIME), instr((:NEW.DELTIME -
:NEW.PMPTIME),' ')+7,2))
+ to_number(substr((:NEW.DELTIME - :NEW.PMPTIME), instr((:NEW.DELTIME -
:NEW.PMPTIME),' ')+10,6)) / 1000000
into :NEW.DELLAG
from dual;
select trunc(to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),1,
instr(:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT,' ')))) * 86400
+ to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),
instr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),' ')+1,2)) * 3600
+ to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),
instr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),' ')+4,2) ) * 60
+ to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),
instr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),' ')+7,2))
+ to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),
instr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),' ')+10,6)) / 1000000
into :NEW.TOTALLAG
from dual;
end ;


ALTER TRIGGER c022427.GGS_HEARTBEAT_TRIG ENABLE;



-- This is for the History heartbeat table


DROP SEQUENCE c022427.SEQ_GGS_HEARTBEAT_HIST ;

CREATE SEQUENCE c022427.SEQ_GGS_HEARTBEAT_HIST INCREMENT BY 1 START WITH 1 ORDER ;



DROP TABLE c022427.GGS_HEARTBEAT_HISTORY;

CREATE TABLE c022427.GGS_HEARTBEAT_HISTORY
( ID NUMBER ,
SRC_DB VARCHAR2(30),
EXTRACT_NAME varchar2(8),
SOURCE_COMMIT TIMESTAMP,
TARGET_COMMIT TIMESTAMP,
CAPTIME TIMESTAMP,
CAPLAG NUMBER,
PMPTIME TIMESTAMP,
PMPGROUP VARCHAR2(8 BYTE),
PMPLAG NUMBER,
DELTIME TIMESTAMP,
DELGROUP VARCHAR2(8 BYTE),
DELLAG NUMBER,
TOTALLAG NUMBER,
thread number,
update_timestamp timestamp,
EDDLDELTASTATS number,
EDMLDELTASTATS number,
RDDLDELTASTATS number,
RDMLDELTASTATS number
);


CREATE OR REPLACE TRIGGER c022427.GGS_HEARTBEAT_TRIG_HIST
BEFORE INSERT OR UPDATE ON GGS_HEARTBEAT_HISTORY
FOR EACH ROW
BEGIN
select seq_ggs_HEARTBEAT_HIST.nextval
into :NEW.ID
from dual;
select systimestamp
into :NEW.target_COMMIT
from dual;
select trunc(to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT ),1,
instr(:NEW.CAPTIME - :NEW.SOURCE_COMMIT,' ')))) * 86400
+ to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT), instr((:NEW.CAPTIME -
:NEW.SOURCE_COMMIT),' ')+1,2)) * 3600
+ to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT), instr((:NEW.CAPTIME -
:NEW.SOURCE_COMMIT),' ')+4,2) ) * 60
+ to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT), instr((:NEW.CAPTIME -
:NEW.SOURCE_COMMIT),' ')+7,2))
+ to_number(substr((:NEW.CAPTIME - :NEW.SOURCE_COMMIT), instr((:NEW.CAPTIME -
:NEW.SOURCE_COMMIT),' ')+10,6)) / 1000000
into :NEW.CAPLAG
from dual;
select trunc(to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME),1,
instr(:NEW.PMPTIME - :NEW.CAPTIME,' ')))) * 86400
+ to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME), instr((:NEW.PMPTIME -
:NEW.CAPTIME),' ')+1,2)) * 3600
+ to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME), instr((:NEW.PMPTIME -
:NEW.CAPTIME),' ')+4,2) ) * 60
+ to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME), instr((:NEW.PMPTIME -
:NEW.CAPTIME),' ')+7,2))
+ to_number(substr((:NEW.PMPTIME - :NEW.CAPTIME), instr((:NEW.PMPTIME -
:NEW.CAPTIME),' ')+10,6)) / 1000000
into :NEW.PMPLAG
from dual;
select trunc(to_number(substr((:NEW.DELTIME - :NEW.PMPTIME),1,
instr(:NEW.DELTIME - :NEW.PMPTIME,' ')))) * 86400
+ to_number(substr((:NEW.DELTIME - :NEW.PMPTIME), instr((:NEW.DELTIME -
:NEW.PMPTIME),' ')+1,2)) * 3600
+ to_number(substr((:NEW.DELTIME - :NEW.PMPTIME), instr((:NEW.DELTIME -
:NEW.PMPTIME),' ')+4,2) ) * 60
+ to_number(substr((:NEW.DELTIME - :NEW.PMPTIME), instr((:NEW.DELTIME -
:NEW.PMPTIME),' ')+7,2))
+ to_number(substr((:NEW.DELTIME - :NEW.PMPTIME), instr((:NEW.DELTIME -
:NEW.PMPTIME),' ')+10,6)) / 1000000
into :NEW.DELLAG
from dual;
select trunc(to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),1,
instr(:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT,' ')))) * 86400
+ to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),
instr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),' ')+1,2)) * 3600
+ to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),
instr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),' ')+4,2) ) * 60
+ to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),
instr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),' ')+7,2))
+ to_number(substr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),
instr((:NEW.TARGET_COMMIT - :NEW.SOURCE_COMMIT),' ')+10,6)) / 1000000
into :NEW.TOTALLAG
from dual;
end ;
/

ALTER TRIGGER c022427.GGS_HEARTBEAT_TRIG_HIST ENABLE;




pmp_hb.prm

extract PMP_hb
userid SOURCE, password GGS
discardfile ./dirrpt/PMP_hb.dsc, append
rmthost coe-02, mgrport 9000
rmttrail ./dirdat/hb
include dirprm/HB_pmp.inc
-- Table source.*;


rep_hb.prm


replicat rep_hb
assumetargetdefs
setenv (ORACLE_SID="db112r1")
userid SOURCE,password GGS
discardfile ./dirrpt/REP_hb.dsc, append
REPORTCOUNT EVERY 5 MINUTES, RATE
include ./dirprm/HB_Rep.inc
--map <SOURCE_SCHEMA>.* ,target <TARGET_SCHEMA>.*;



ADD TRANDATA c022427.HEARTBEAT



grant select on v_$instance to &&ogg_user;
grant select on v_$database to &&ogg_user;

BEGIN
 SYS.DBMS_SCHEDULER.DROP_JOB(job_name => 'c022427.OGG_HB',
 defer => false,
 force => false);
END;
/

--GGS_HB

BEGIN
 SYS.DBMS_SCHEDULER.DROP_JOB(job_name => 'c022427.GGS_HB',
 defer => false,
 force => false);
END;
/




CREATE OR REPLACE PROCEDURE c022427.gg_update_hb_tab IS
BEGIN
UPDATE heartbeat SET update_timestamp = SYSTIMESTAMP , src_db = 'SOAUAT1JGB';
COMMIT;
END;
/

--Use this
--Create a scheduler job in the source database to update the Heartbeat record every minute as follows:

BEGIN
SYS.DBMS_SCHEDULER.CREATE_JOB (
JOB_NAME => '"C022427"."GGS_HB"',
JOB_TYPE => 'STORED_PROCEDURE',
JOB_ACTION => '"C022427"."GG_UPDATE_HB_TAB"',
NUMBER_OF_ARGUMENTS => 0,
START_DATE => NULL,
REPEAT_INTERVAL => 'FREQ=MINUTELY',
END_DATE => NULL,
JOB_CLASS => '"SYS"."DEFAULT_JOB_CLASS"',
ENABLED => FALSE,
AUTO_DROP => FALSE,
COMMENTS => 'GoldenGate Heartbeat Update Job',
CREDENTIAL_NAME => NULL,
DESTINATION_NAME => NULL);
SYS.DBMS_SCHEDULER.SET_ATTRIBUTE(NAME => '"C022427"."GGS_HB"',ATTRIBUTE => 'RESTARTABLE', VALUE => TRUE);
SYS.DBMS_SCHEDULER.SET_ATTRIBUTE(NAME => '"C022427"."GGS_HB"', ATTRIBUTE => 'LOGGING_LEVEL', VALUE => DBMS_SCHEDULER.LOGGING_OFF);
SYS.DBMS_SCHEDULER.ENABLE(NAME => '"C022427"."GGS_HB"');
END;
/



&&ogg_user..


--You can use the following sql to check the status of the job –

select
 owner,
 job_name,
 job_class,
 enabled,
 next_run_date,
 repeat_interval
from
 dba_scheduler_jobs
where
 owner = decode(upper('C022427'), 'ALL', owner, upper('C022427'))
;



--Extract Configuration


ADD EXTRACT ext_hb, TRANLOG, BEGIN NOW, threads 1
ADD EXTTRAIL ./dirdat/~Primary_trail~, EXTRACT ext_hb, MEGABYTES 100


Include file –
./dirprm/HB_Extract.inc
TABLE <source schema>.HEARTBEAT,
TOKENS (
CAPGROUP = @GETENV ("GGENVIRONMENT", "GROUPNAME"),
CAPTIME = @DATE ("YYYY-MM-DD HH:MI:SS.FFFFFF","JTS",@GETENV
("JULIANTIMESTAMP")),
EDDLDELTASTATS = @GETENV ("DELTASTATS", "DDL"),
EDMLDELTASTATS = @GETENV ("DELTASTATS", "DML")
);





EXTRACT ext_hb
SETENV (ORACLE_SID=ora11g)
USERID source password ggs
EXTTRAIL ./dirdat/db
DISCARDFILE ./dirrpt/ext_hb.dsc, APPEND
REPORTCOUNT EVERY 5 MINUTES, RATE
FETCHOPTIONS, NOUSESNAPSHOT, NOUSELATESTVERSION, MISSINGROW REPORT
STATOPTIONS REPORTFETCH

-- This is the Heartbeat table
include dirprm/HB_Extract.inc

-- The implementation of this parameter varies depending on the process.
-- TABLE source.*;
--./dirprm/HB_Extract.inc

TABLE C022427.HEARTBEAT, &
TOKENS (  &
CAPGROUP = @GETENV ("GGENVIRONMENT", "GROUPNAME"),  &
CAPTIME = @DATE ("YYYY-MM-DD HH:MI:SS.FFFFFF","JTS",@GETENV("JULIANTIMESTAMP")),  &
EDDLDELTASTATS = @GETENV ("DELTASTATS", "DDL"),  &
EDMLDELTASTATS = @GETENV ("DELTASTATS", "DML")  &
);



--Data Pump Configuration


ADD EXTRACT pmp_hb, BEGIN NOW, EXTTRAILSOURCE ./dirdat/~Primary_trail~
ADD RMTTRAIL ./dirdat/~Target_trail~, EXTRACT pmp_hb, MEGABYTES 100


./dirprm/HB_pmp.inc
-- HB_pmp.inc
-- Heartbeat Table
table <source schema>.heartbeat,
 TOKENS (
 PMPGROUP = @GETENV ("GGENVIRONMENT","GROUPNAME"),
 PMPTIME = @DATE ("YYYY-MM-DD HH:MI:SS.FFFFFF","JTS",@GETENV
("JULIANTIMESTAMP"))
 );



extract PMP_hb
userid ~ogg_user~, password ~ogg_pass~
discardfile ./dirrpt/PMP_hb.dsc, append
rmthost ~target_host~, mgrport ~Target_mgr~
rmttrail ./dirdat/~Target_trail~

-- Heartbeat
include dirprm/HB_pmp.inc

--Table ~source_schema~.*;
-- HB_pmp.inc

-- Heartbeat Table
TABLE C022427.HEARTBEAT, &
 TOKENS (  &
 PMPGROUP = @GETENV("GGENVIRONMENT","GROUPNAME"),  &
 PMPTIME  = @DATE("YYYY-MM-DD HH:MI:SS.FFFFFF","JTS",@GETENV("JULIANTIMESTAMP"))  &
 );



--Replicat Configuration

add replicat REP_HB exttrail ./dirdat/~Rep_PR_Trail~ nodbcheckpoint


./dirprm/HB_Rep.inc
dirprm/HB_Rep.inc
-- Heartbeat table


MAP C022427.HEARTBEAT, TARGET C022427.GGS_HEARTBEAT, &
KEYCOLS (DELGROUP),  &
INSERTMISSINGUPDATES,  &
COLMAP (USEDEFAULTS,  &
ID = 0,  &
SOURCE_COMMIT  = @GETENV('GGHEADER', 'COMMITTIMESTAMP'),  &
EXTRACT_NAME   = @TOKEN('CAPGROUP'),  &
CAPTIME        = @TOKEN('CAPTIME'),  &
PMPGROUP       = @TOKEN('PMPGROUP'),  &
PMPTIME        = @TOKEN('PMPTIME'),  &
DELGROUP       = @GETENV('GGENVIRONMENT', 'GROUPNAME') ,  &
DELTIME        = @DATE('YYYY-MM-DD HH:MI:SS.FFFFFF','JTS',@GETENV('JULIANTIMESTAMP')),  &
EDDLDELTASTATS = @TOKEN('EDDLDELTASTATS'),  &
EDMLDELTASTATS = @TOKEN('EDMLDELTASTATS'),  &
RDDLDELTASTATS = @GETENV('DELTASTATS', 'DDL'),  &
RDMLDELTASTATS = @GETENV('DELTASTATS', 'DML') );


MAP C022427.HEARTBEAT, TARGET C022427.GGS_HEARTBEAT_HISTORY,  &
KEYCOLS (ID),  &
INSERTALLRECORDS,  &
COLMAP (USEDEFAULTS,  &
ID = 0,  &
SOURCE_COMMIT  = @GETENV('GGHEADER', 'COMMITTIMESTAMP'),  &
EXTRACT_NAME   = @TOKEN('CAPGROUP'),  &
CAPTIME        = @TOKEN('CAPTIME'),  &
PMPGROUP       = @TOKEN('PMPGROUP'),  &
PMPTIME        = @TOKEN('PMPTIME'),  &
DELGROUP       = @GETENV('GGENVIRONMENT', 'GROUPNAME'),  &
DELTIME        = @DATE('YYYY-MM-DD HH:MI:SS.FFFFFF','JTS',@GETENV('JULIANTIMESTAMP')),  &
EDDLDELTASTATS = @TOKEN('EDDLDELTASTATS'),  &
EDMLDELTASTATS = @TOKEN('EDMLDELTASTATS'),  &
RDDLDELTASTATS = @GETENV('DELTASTATS', 'DDL'),  &
RDMLDELTASTATS = @GETENV('DELTASTATS', 'DML') );




replicat rep_hb

assumetargetdefs
setenv (ORACLE_SID="db112r1")
userid SOURCE,password GGS
discardfile ./dirrpt/REP_hb.dsc, append
REPORTCOUNT EVERY 5 MINUTES, RATE
include ./dirprm/HB_Rep.inc
map C022427.* ,target C022427.*;


info heartbeattable
add heartbeattable
delete heartbeattable

HEARTBEATTABLE C022427.gg_heartbeat


2016-08-04 12:51:16  INFO    OGG-01298  Oracle GoldenGate Capture for Oracle, eggtest1.prm:  Column function diagnostic message: could not find column "GGENVIRONMENT".
2016-08-04 12:51:16  ERROR   OGG-00369  Oracle GoldenGate Capture for Oracle, eggtest1.prm:  Error in token clause for CAPGROUP.
